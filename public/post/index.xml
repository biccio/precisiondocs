<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PrecisionDocs</title>
    <link>http://localhost:1313/post/</link>
    <description>Recent content on PrecisionDocs</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Sep 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Pros and Cons of Embedding Documentation in Code</title>
      <link>http://localhost:1313/post/the-pros-and-cons-of-embedding-technical-documentation-inside-the-codebase/</link>
      <pubDate>Mon, 30 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/the-pros-and-cons-of-embedding-technical-documentation-inside-the-codebase/</guid>
      <description>&lt;h2 id=&#34;introduction-choosing-the-best-place-for-documentation&#34;&gt;Introduction: Choosing the Best Place for Documentation&lt;/h2&gt;&#xA;&lt;p&gt;If you’ve ever worked with code and tech documentation, you may have asked yourself, “Where should all that essential information go?” Embedding documentation directly in the codebase versus keeping it separate (like in a standalone knowledge base) each comes with pros and cons, along with specific use cases where one approach may work better than the other. Here, we’ll examine the arguments for both options to help you decide which method best fits your project.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Build and Deploy a Tech Documentation Static Site with Hugo</title>
      <link>http://localhost:1313/post/how-to-build-and-deploy-a-blog-with-hugo-github-and-netlify/</link>
      <pubDate>Fri, 23 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/how-to-build-and-deploy-a-blog-with-hugo-github-and-netlify/</guid>
      <description>Hugo is a powerful static site generator functioning as a complete framework. Along with Github as storage repository and Netlify as deployment tool, it makes a perfect platform to run and mantain a fast and lightweight documentation website.</description>
    </item>
    <item>
      <title>How to use Obsidian and Github to Organize and Maintain your Tech Documentation</title>
      <link>http://localhost:1313/post/how-to-use-obsidian-and-github-to-organize-and-maintain-your-tech-document/</link>
      <pubDate>Wed, 24 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/how-to-use-obsidian-and-github-to-organize-and-maintain-your-tech-document/</guid>
      <description>&lt;h2 id=&#34;introduction-managing-information-effectively&#34;&gt;Introduction: Managing Information Effectively&lt;/h2&gt;&#xA;&lt;p&gt;In today’s fast-paced technical environments, clear and well-organized documentation is key to ensuring smooth workflows and successful collaboration. Whether you’re working on API documentation, software architecture overviews, or development processes, managing this information effectively is essential. Two tools that offer a powerful solution for handling technical documentation are &lt;a href=&#34;https://obsidian.md/&#34;&gt;Obsidian&lt;/a&gt; and &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;. Together, they provide an efficient system for writing, organizing, and sharing technical documents.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why Diataxis Framework is A Game Changer for Organizing Technical Documentation</title>
      <link>http://localhost:1313/post/why-diataxis-framework-is-a-game-changer-for-organizing-technical-documentation/</link>
      <pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/why-diataxis-framework-is-a-game-changer-for-organizing-technical-documentation/</guid>
      <description>&lt;p&gt;Effective technical documentation is critical to the success of any company, particularly in tech-driven environments where internal teams, partners, and customers rely on precise and accessible information. However, creating and managing high-quality documentation is no easy task. It’s common to end up with scattered, inconsistent, or overly complex content that makes it difficult for users to find what they need, when they need it.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
